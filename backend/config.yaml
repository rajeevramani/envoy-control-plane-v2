# ===========================================
# CONTROL PLANE CONFIGURATION
# Settings for our Rust control plane application
# ===========================================
control_plane:
  server:
    rest_port: 8080        # REST API port for cluster/route management
    xds_port: 18000        # xDS server port for Envoy connections
    host: "0.0.0.0"        # Control plane binding address
  tls:
    cert_path: "./certs/server.crt"    # TLS certificate file path
    key_path: "./certs/server.key"     # TLS private key file path
    enabled: true                      # Enable TLS for xDS server
  logging:
    level: "info"          # Control plane log level
  load_balancing:
    envoy_version: "1.24"
    available_policies:    # Policies our control plane supports
      - "ROUND_ROBIN"
      - "LEAST_REQUEST"
      - "RANDOM"
      - "RING_HASH"
    default_policy: "ROUND_ROBIN"  # Default when none specified
  http_methods:
    supported_methods:     # HTTP methods our control plane supports for routing
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "PATCH"
      - "HEAD"
      - "OPTIONS"
      - "TRACE"
      - "CONNECT"
  authentication:
    enabled: true                    # Enable authentication
    jwt_secret: "MUST_BE_SET_VIA_JWT_SECRET_ENV_VAR"  # SECURITY: Use JWT_SECRET environment variable
    jwt_expiry_hours: 24            # JWT tokens expire after 24 hours
    jwt_issuer: "envoy-control-plane"
    password_hash_cost: 12          # bcrypt cost (higher = more secure, slower)
  storage:
    limits:
      max_routes: 1000              # Maximum number of routes
      max_clusters: 500             # Maximum number of clusters  
      max_endpoints_per_cluster: 50 # Maximum endpoints per cluster
      max_http_filters: 50          # Maximum number of HTTP filters
    behavior:
      reject_on_capacity: true      # Reject requests when capacity exceeded
      enable_metrics: true          # Enable storage capacity metrics
  http_filters:
    enabled: true                   # Enable HTTP filters feature
    supported_filters:              # HTTP filter types our control plane supports
      - "rate_limit"
      - "cors"  
      - "header_manipulation"
      - "authentication"
      - "request_validation"
    default_order:                  # Global filter execution order
      - "authentication"            # Auth first for security
      - "rate_limit"               # Rate limiting after auth
      - "cors"                     # CORS handling
      - "header_manipulation"       # Header modifications
      - "request_validation"        # Final validation
    limits:
      max_filters_per_route: 10     # Maximum filters per route
      max_global_filters: 50        # Maximum total filters

# ===========================================
# ENVOY CONFIGURATION GENERATION
# Settings used when generating Envoy config files
# ===========================================
envoy_generation:
  config_dir: "./configs"  # Where to write generated Envoy configs
  admin:
    host: "127.0.0.1"      # Envoy admin interface binding
    port: 9901             # Envoy admin interface port
  listener:
    binding_address: "0.0.0.0"  # Envoy proxy listener binding
    default_port: 10000          # Default Envoy proxy port
  cluster:
    connect_timeout_seconds: 5   # Cluster connection timeout
    discovery_type: "STRICT_DNS" # Cluster discovery type (STRICT_DNS, LOGICAL_DNS, etc.)
    dns_lookup_family: "V4_ONLY" # DNS lookup family (V4_ONLY, V6_ONLY, AUTO)
    default_protocol: "TCP"      # Default endpoint protocol (TCP, UDP)
  naming:
    listener_name: "listener_0"        # Envoy listener name
    virtual_host_name: "local_service" # Virtual host name
    route_config_name: "local_route"   # Route configuration name
    default_domains: ["*"]             # Default virtual host domains
  bootstrap:
    node_id: "envoy-test-node"         # Envoy node identifier
    node_cluster: "envoy-test-cluster" # Envoy node cluster name
    control_plane_host: "127.0.0.1" # Control plane service name (local)
    main_listener_name: "main_listener" # Main proxy listener name
    control_plane_cluster_name: "control_plane_cluster" # Static cluster name for control plane
  http_filters:
    stat_prefix: "ingress_http"        # HTTP connection manager statistics prefix
    router_filter_name: "envoy.filters.http.router" # HTTP router filter name
    hcm_filter_name: "envoy.filters.network.http_connection_manager" # HTTP connection manager filter name