syntax = "proto3";

package envoy.service.discovery.v3;

import "google/protobuf/any.proto";

// Core discovery service types
message DiscoveryRequest {
  string version_info = 1;
  Node node = 2;
  repeated string resource_names = 3;
  string type_url = 4;
  string nonce = 5;
}

message DiscoveryResponse {
  string version_info = 1;
  repeated google.protobuf.Any resources = 2;
  string type_url = 3;
  string nonce = 4;
}

message Node {
  string id = 1;
  string cluster = 2;
  map<string, string> metadata = 3;
}

// Discovery services
service AggregatedDiscoveryService {
  rpc StreamAggregatedResources(stream DiscoveryRequest) returns (stream DiscoveryResponse);
}

service RouteDiscoveryService {
  rpc StreamRoutes(stream DiscoveryRequest) returns (stream DiscoveryResponse);
}

service ClusterDiscoveryService {
  rpc StreamClusters(stream DiscoveryRequest) returns (stream DiscoveryResponse);
}

// Address and endpoint types
message Address {
  SocketAddress socket_address = 1;
}

message SocketAddress {
  string address = 1;
  uint32 port_value = 2;
}

message ClusterLoadAssignment {
  string cluster_name = 1;
  repeated LocalityLbEndpoints endpoints = 2;
}

message LocalityLbEndpoints {
  repeated LbEndpoint lb_endpoints = 1;
}

message LbEndpoint {
  Endpoint endpoint = 1;
}

message Endpoint {
  Address address = 1;
}

// Cluster configuration
message Cluster {
  string name = 1;
  
  enum DiscoveryType {
    STATIC = 0;
    STRICT_DNS = 1;
  }
  DiscoveryType type = 2;
  
  enum LbPolicy {
    ROUND_ROBIN = 0;
    LEAST_REQUEST = 1;
  }
  LbPolicy lb_policy = 3;
  
  ClusterLoadAssignment load_assignment = 4;
}

// Route configuration
message RouteConfiguration {
  string name = 1;
  repeated VirtualHost virtual_hosts = 2;
}

message VirtualHost {
  string name = 1;
  repeated string domains = 2;
  repeated Route routes = 3;
}

message Route {
  RouteMatch match = 1;
  RouteAction route = 2;
}

message RouteMatch {
  string prefix = 1;
}

message RouteAction {
  string cluster = 1;
  string prefix_rewrite = 2;
}